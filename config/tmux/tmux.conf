# vim:filetype=tmux:foldmethod=marker

# {n}vim compability
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -sg escape-time 10

set -g mouse on

set -g history-limit 1000000

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# STATUS LINE ----------------------------------------------------------------------------------{{{
set -g status on

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 1

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# }}}

# WINDOWS/PANES -------------------------------------------------------------------------------{{{
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
# automatically renumber windows
set-option -g renumber-windows on

# Start numbering at 1
set -g base-index 1

bind C command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"
bind C-c command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"
# auto window rename
set-window-option -g automatic-rename

# fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind "%"; bind % split-window -h -c "#{pane_current_path}"'

# set window split
bind-key v split-window -h -l 100 -c '#{pane_current_path}'
bind-key s split-window -v -l 30 -c '#{pane_current_path}'

# pane movement
bind-key J command-prompt -p "Join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "Send pane to:"  "join-pane -t '%%'"

# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
bind F set -w window-size

# Focus events enabled for terminals that support them
set -g focus-events on

# No bells at all
set -g bell-action none

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# }}}

# KEYBINDINGS ----------------------------------------------------------------------------------{{{
# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix
# Allows using C-a a <command> to send commands to a TMUX session inside another TMUX session
bind-key a send-prefix

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy text with `y` in copy mode
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# copy text with mouse selection without pressing any key
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# emacs key bindings in tmux command prompt (prefix + :) are better
set -g status-keys emacs

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

bind-key b send-keys -R \; clear-history

# Source .tmux.conf as suggested in `man tmux`
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# }}}

source $HOME/.config/tmux/theme.conf
# This tmux statusbar config was created by tmuxline.vim
# on Mon, 08 Feb 2021

