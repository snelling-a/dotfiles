#!/usr/bin/env bash
# shellcheck disable=1083,1009,1072,1073

set shellopts '-eu'

set dircounts
set drawbox
set hidden
set icons
set ifs "\n"
set incfilter
set incsearch
set number
set previewer ~/.config/lf/pv.sh
set relativenumber
set scrolloff 10

set promptfmt "\033[34;1m%d\033[0m\033[1m%f\033[0m"
set truncatechar â€¦

cmd open ${{
case $(file --mime-type --dereference --brief $f) in
    text/*) nvim $fx;;
    application/json) nvim $fx;;
    *) for f in $fx; do open $f > /dev/null 2> /dev/null & done;;
esac
}}

cmd extract ${{
set -f
case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
set -f
mkdir $1
cp -r $fx $1
tar czf $1.tar.gz $1
rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
set -f
mkdir $1
cp -r $fx $1
zip -r $1.zip $1
rm -rf $1
}}

cmd openShell ${{
$SHELL
}}

# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
set -f
printf "$fx\n"
printf "delete?[y/n]"
read ans
[ $ans = "y" ] && trash $fx
}}

cmd mkdir %mkdir $1

cmd mkfile ${{
touch $1
}}

cmd z ${{
result="$(zoxide query --exclude $PWD $@)"
lf -remote "send $id cd $result"
}}

cmd zi ${{
result="$(zoxide query -i)"
lf -remote "send $id cd $result"
}}

cmd fzf_jump ${{
res="$(fd | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
if [ -d "$res" ] ; then
    cmd="cd"
elif [ -f "$res" ] ; then
    cmd="select"
else
    exit 0
fi
lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_search ${{
res="$( \
    RG_PREFIX="rg --column --line-number --no-heading  --color=always  --smart-case "
    FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
        fzf \
        --bind "change:reload:$RG_PREFIX {q} || true" \
        --ansi\
        --layout=reverse \
        --header 'Search in files' \
        | cut -d':' -f1
            )"
            [ ! -z "$res" ] && lf -remote "send $id select \"$res\"" 
        }}

# keymaps
map c
map d
map M
map p
# map r
map w
map y

map <backspace2> set hidden!
map <c-p> :fzf_jump
map <c-r> :fzf_search
map <enter> open
map cmp tar
map dD delete
map dd push :cut<enter>
map ext extract
map i $~/.config/lf/pv.sh $f | less -R
map Md push :mkdir<space>
map Mf push :mkfile<space>
map pp push :paste<enter>
# map rn push :rename<space>
map S openShell
map X !$f
map x $$f
map yd !printf $PWD | pbcopy
map yn !printf $f | xargs basename | pbcopy
map yp !printf $f | pbcopy
map yy push :copy<enter>
